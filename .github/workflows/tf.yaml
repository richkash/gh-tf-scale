name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to deploy'
        required: true
        default: dev
        type: choice
        options:
          - dev
          - staging
          - prod

jobs:
  Validate-files:
    name: Validate that only terraform.tfvars files are changed
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get changed files
        id: changed
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          echo "files=$CHANGED_FILES" >> $GITHUB_OUTPUT

      - name: Validate file changes
        run: |
          ALLOWED_PATTERN="\.tfvars$"
          INVALID_FILES=$(echo "${{ steps.changed.outputs.files }}" | grep -vE "$ALLOWED_PATTERN" || true)
          if [ -n "$INVALID_FILES" ]; then
            echo "❌ Invalid files detected:"
            echo "$INVALID_FILES"
            echo "Only *.tfvars files can be modified in pull requests!"
            exit 1
          else
            echo "✅ Validation passed — only tfvars files were modified."
          fi
          
  build:
    name: Building Resources in ${{ github.event.inputs.env }} Environment for ${{ github.actor }}
    runs-on: ubuntu-latest

    env:
      AWS_REGION: us-east-1
      TF_ENV: ${{ github.event.inputs.env || 'dev' }}
      TF_BACKEND_BUCKET: gh-tf-ci-state

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}      

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init
        run: |
          TF_ENV_DIR="environments/${TF_ENV}"
          TF_BACKEND_KEY="environments/${TF_ENV}-${GITHUB_ACTOR}/terraform.tfstate"        
          terraform -chdir=${TF_ENV_DIR} init \
          -backend-config="bucket=${TF_BACKEND_BUCKET}" \
          -backend-config="key=${TF_BACKEND_KEY}"

      - name: Terraform Validate
        run: |
          TF_ENV_DIR="environments/${TF_ENV}"
          terraform -chdir=${TF_ENV_DIR} validate

      - name: Terraform Plan
        run: |
          TF_ENV_DIR="environments/${TF_ENV}"
          terraform -chdir=${TF_ENV_DIR} plan -out=tfplan

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TF_ENV }}-terraform-plan
          path: ${{ env.TF_ENV_DIR }}/tfplan

      - name: Terraform Apply
        run: |
          TF_ENV_DIR="environments/${TF_ENV}"
          terraform -chdir=${TF_ENV_DIR} apply -auto-approve